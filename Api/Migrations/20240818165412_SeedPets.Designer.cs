// <auto-generated />
using System;
using DigipetApi.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigipetApi.Api.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240818165412_SeedPets")]
    partial class SeedPets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DigipetApi.Api.Models.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Happiness")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("Mood")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            PetId = 1,
                            CreatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1920),
                            Happiness = 100,
                            Health = 100,
                            Mood = 100,
                            Name = "Buddy",
                            Species = "dogs",
                            Type = "labrador",
                            UpdatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1920)
                        },
                        new
                        {
                            PetId = 2,
                            CreatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1920),
                            Happiness = 100,
                            Health = 100,
                            Mood = 100,
                            Name = "Whiskers",
                            Species = "cats",
                            Type = "persian",
                            UpdatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1930)
                        },
                        new
                        {
                            PetId = 3,
                            CreatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1930),
                            Happiness = 100,
                            Health = 100,
                            Mood = 100,
                            Name = "Tweety",
                            Species = "birds",
                            Type = "canary",
                            UpdatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1930)
                        },
                        new
                        {
                            PetId = 4,
                            CreatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1930),
                            Happiness = 100,
                            Health = 100,
                            Mood = 100,
                            Name = "Rex",
                            Species = "dogs",
                            Type = "german shepherd",
                            UpdatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1930)
                        },
                        new
                        {
                            PetId = 5,
                            CreatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1930),
                            Happiness = 100,
                            Health = 100,
                            Mood = 100,
                            Name = "Fluffy",
                            Species = "cats",
                            Type = "maine coon",
                            UpdatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1930)
                        },
                        new
                        {
                            PetId = 6,
                            CreatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1930),
                            Happiness = 100,
                            Health = 100,
                            Mood = 100,
                            Name = "Polly",
                            Species = "birds",
                            Type = "parrot",
                            UpdatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1930)
                        },
                        new
                        {
                            PetId = 7,
                            CreatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1930),
                            Happiness = 100,
                            Health = 100,
                            Mood = 100,
                            Name = "Spike",
                            Species = "dogs",
                            Type = "bulldog",
                            UpdatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1930)
                        },
                        new
                        {
                            PetId = 8,
                            CreatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1940),
                            Happiness = 100,
                            Health = 100,
                            Mood = 100,
                            Name = "Mittens",
                            Species = "cats",
                            Type = "siamese",
                            UpdatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1940)
                        },
                        new
                        {
                            PetId = 9,
                            CreatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1940),
                            Happiness = 100,
                            Health = 100,
                            Mood = 100,
                            Name = "Chirpy",
                            Species = "birds",
                            Type = "finch",
                            UpdatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1940)
                        },
                        new
                        {
                            PetId = 10,
                            CreatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1940),
                            Happiness = 100,
                            Health = 100,
                            Mood = 100,
                            Name = "Max",
                            Species = "dogs",
                            Type = "golden retriever",
                            UpdatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1940)
                        },
                        new
                        {
                            PetId = 11,
                            CreatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1940),
                            Happiness = 100,
                            Health = 100,
                            Mood = 100,
                            Name = "Luna",
                            Species = "cats",
                            Type = "russian blue",
                            UpdatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1940)
                        },
                        new
                        {
                            PetId = 12,
                            CreatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1940),
                            Happiness = 100,
                            Health = 100,
                            Mood = 100,
                            Name = "Kiwi",
                            Species = "birds",
                            Type = "budgerigar",
                            UpdatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1940)
                        },
                        new
                        {
                            PetId = 13,
                            CreatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1950),
                            Happiness = 100,
                            Health = 100,
                            Mood = 100,
                            Name = "Rocky",
                            Species = "dogs",
                            Type = "rottweiler",
                            UpdatedAt = new DateTime(2024, 8, 18, 16, 54, 12, 370, DateTimeKind.Utc).AddTicks(1950)
                        });
                });

            modelBuilder.Entity("DigipetApi.Api.Models.ScheduledTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<string>("DaysOfWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScheduledTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskId");

                    b.HasIndex("PetId");

                    b.ToTable("ScheduledTasks");
                });

            modelBuilder.Entity("DigipetApi.Api.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DigipetApi.Api.Models.Pet", b =>
                {
                    b.HasOne("DigipetApi.Api.Models.User", "User")
                        .WithMany("Pets")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigipetApi.Api.Models.ScheduledTask", b =>
                {
                    b.HasOne("DigipetApi.Api.Models.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("DigipetApi.Api.Models.User", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
